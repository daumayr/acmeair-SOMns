(*******************************************************************************
* Copyright (c) 2015 IBM Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************)

class AuthService settings: settings dataAccess: dataaccess= Value (
	|	
		dataaccess = dataaccess.
	|
	(*logger.info("Use dataaccess:"+daModuleName);*)
)(
	public initializeDatabaseConnections: callback = (
		dataaccess initializeDatabaseConnections: callback.
	)

	public createSessionInDB: customerid callback: callback = (
		| now later document |
		(*logger.debug("create session in DB:"+customerId);*)

		now:: Date new.
		later:: Date new: (now getTime + 1000*60*60*24).
			
		document:: '{ "_id" : uuid.v4(), "customerid" : customerId, "lastAccessedTime" : now, "timeoutTime" : later }'.
		dataaccess insertOne: #n_customerSession doc: document callback: [ :doc | callback value: document ]
	)

	public validateSessionInDB: customerId callback: callback = (
		| now |
		(*logger.debug("validate session in DB:"+sessionId);*)
		now:: Date new.

		dataaccess findOne: #n_customerSession key: sessionId callback: [ :session |
			(now > session timeoutTime) ifTrue: [
				dataaccess remove: #n_customerSession condition: sessionId callback: [ callback value: nil ]
			] ifFalse: [
				callback value: session.
			]
		]
	)

	public invalidateSessionInDB: sessionid callback: callback = (
		(*logger.debug("invalidate session in DB:"+sessionid);*)
		dataaccess remove: #n_customerSession condition: sessionid callback: callback.
	)
)